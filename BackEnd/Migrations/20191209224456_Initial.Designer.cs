// <auto-generated />
using System;
using BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(BackEndContext))]
    [Migration("20191209224456_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BackEnd.Models.Period", b =>
                {
                    b.Property<int>("PeriodID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Subject");

                    b.Property<int>("TeacherID");

                    b.HasKey("PeriodID");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("BackEnd.Models.PeriodHomework", b =>
                {
                    b.Property<int>("PeriodHomeworkID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignedDate");

                    b.Property<string>("Description");

                    b.Property<string>("DueDate");

                    b.Property<string>("ImageId");

                    b.Property<int>("PeriodID");

                    b.HasKey("PeriodHomeworkID");

                    b.ToTable("PeriodHomeworks");
                });

            modelBuilder.Entity("BackEnd.Models.PeriodStudents", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PeriodID");

                    b.Property<int>("StudentID");

                    b.HasKey("ID");

                    b.ToTable("PeriodStudents");
                });

            modelBuilder.Entity("BackEnd.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("PeriodID");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("StudentID");

                    b.HasIndex("PeriodID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("BackEnd.Models.StudentPeriodHw", b =>
                {
                    b.Property<int>("StudentPeriodHwId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Grade");

                    b.Property<int>("PeriodHwID");

                    b.Property<string>("Shortcode");

                    b.Property<int>("StudentID");

                    b.Property<string>("StudentResponse");

                    b.Property<string>("TeacherComments");

                    b.HasKey("StudentPeriodHwId");

                    b.ToTable("StudentPeriodHw");
                });

            modelBuilder.Entity("BackEnd.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("BackEnd.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackEnd.Models.Student", b =>
                {
                    b.HasOne("BackEnd.Models.Period")
                        .WithMany("Students")
                        .HasForeignKey("PeriodID");
                });
#pragma warning restore 612, 618
        }
    }
}
